// 자연수 n이 매개변수로 주어집니다. n을 3진법 상에서 앞뒤로 뒤집은 후,
// 이를 다시 10진법으로 표현한 수를 return 하도록 solution 함수를 완성해주세요.

// 삼진법 변환 법
// 1. 주어진 숫자를 3으로 나누고, 몫과 나머지를 구하기
// 2. 나머지를 문자열로 저장. 몫이 0보다 클 때는 몫으로 다시 3으로 나누고 몫과 나머지 구하기.
// 3. 문자열로 저장된 나머지들을 역순으로 이어붙여 삼진수를 구한다.

// 십진수 45를 삼진수로 바꾸기
// 1. 45를 3으로 나누면 몫 15, 나머지 0
// 2. 나머지를 문자열로 저장, 몫이 0보다 크니까 몫 15를 다시 3으로 나눔. 몫은 5, 나머지 0,
// 3. 다시 5를 3으로 나눔. 몫은 1, 나머지 2
// 4. 1을 3으로 나눔. 몫은 0 , 나머지 1
// 5. 나머지 문자열은 현재 0021
// 6. 이것을 뒤집는다. 1200
// 45는 삼진법으로 표현하면 1200이다

function solution(n) {
  let answer = 0;
  let 뒤집힌삼진수 = "";
  let 몫 = n;
  //루프를 돌며 몫이 0이 될 때까지 연산하기 위해 do, while문 이용.
  do {
    let 나머지 = 몫 % 3; //몫을 사용하여 나머지 계산
    switch (나머지) {
      case 0:
        뒤집힌삼진수 += "0";
        break;
      case 1:
        뒤집힌삼진수 += "1";
        break;
      case 2:
        뒤집힌삼진수 += "2";
        break;
    }
    몫 = Math.floor(몫 / 3); //몫을 3으로 나누었을 떄 몫>0이면 계속 반복.
  } while (몫 > 0);

  let 올바른삼진수 = 뒤집힌삼진수.split("").reverse().join("");
  //이제 뒤집힌 삼진수를 십진법으로 변환하면 됨
  //12211
  console.log(올바른삼진수);
  for (let i = 0; i < 올바른삼진수.length; i++) {
    answer += 올바른삼진수[i] * 3 ** i;
    //지수연산자 위는 Math.pow(3, i)와 같음.
    console.log(answer);
    console.log(i, "번쨰 인덱스 :", 올바른삼진수[i], 올바른삼진수[i] * (3 ^ i));
  }
  console.log(answer);
  return answer;
}
console.log(solution(125));

// 지수연산자: ES6문법으로, 좌항의 수를 우항의 수만큼 거듭제곱한 결과를 반환 **이렇게 생김.

//예를 들어, 2 ** 3은 2를 3제곱한 8을 반환
